name: üöÄ Build Pressure Vessel Calculator

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: windows
            output_name: PressureVesselCalculator.exe
          - os: macos-latest
            platform: macos
            output_name: PressureVesselCalculator
          - os: ubuntu-latest
            platform: linux
            output_name: PressureVesselCalculator

    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v4

    - name: üêç Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: üì¶ Install Dependencies (Ubuntu)
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk python3-dev

    - name: üì¶ Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller>=5.0
        pip install customtkinter>=5.2.0
        pip install pypdf>=3.0.0
        pip install pandas>=1.5.0
        pip install openpyxl>=3.0.0
        pip install openai>=1.0.0
        pip install requests>=2.28.0
        pip install Pillow>=9.0.0

    - name: üîç Debug Info
      run: |
        echo "Platform: ${{ matrix.platform }}"
        echo "Python version:"
        python --version
        echo "PyInstaller version:"
        pyinstaller --version
        echo "Working directory:"
        pwd
        echo "Files in directory:"
        python -c "import os; print('\n'.join(os.listdir('.')))"

    - name: üèóÔ∏è Build Application (Windows)
      if: matrix.platform == 'windows'
      run: |
        pyinstaller --clean --onefile --windowed --name "PressureVesselCalculator" --icon=app.ico --hidden-import customtkinter --hidden-import tkinter --hidden-import tkinter.filedialog --hidden-import tkinter.messagebox --hidden-import PIL._tkinter_finder pressure_vessel_app.py

    - name: üèóÔ∏è Build Application (macOS)
      if: matrix.platform == 'macos'
      run: |
        pyinstaller --clean --onefile --windowed --name "PressureVesselCalculator" --icon=app.icns --hidden-import customtkinter --hidden-import tkinter --hidden-import tkinter.filedialog --hidden-import tkinter.messagebox --hidden-import PIL._tkinter_finder pressure_vessel_app.py

    - name: üèóÔ∏è Build Application (Linux)
      if: matrix.platform == 'linux'
      run: |
        pyinstaller --clean --onefile --name "PressureVesselCalculator" --hidden-import customtkinter --hidden-import tkinter --hidden-import tkinter.filedialog --hidden-import tkinter.messagebox --hidden-import PIL._tkinter_finder pressure_vessel_app.py

    - name: üìÇ List Build Output
      run: |
        echo "Contents of dist folder:"
        python -c "import os; print('\n'.join(os.listdir('dist')) if os.path.exists('dist') else 'dist folder not found')"

    - name: ‚úÖ Verify Build
      run: |
        python -c "
        import os
        import sys
        output_name = '${{ matrix.output_name }}'
        dist_path = os.path.join('dist', output_name)
        if os.path.exists(dist_path):
            size = os.path.getsize(dist_path)
            print('Build successful!')
            print(f'File size: {size} bytes ({size/(1024*1024):.1f} MB)')
            sys.exit(0)
        else:
            print(f'Build failed - executable not found: {dist_path}')
            sys.exit(1)
        "

    - name: üì§ Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: PressureVesselCalculator-${{ matrix.platform }}
        path: dist/${{ matrix.output_name }}
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: üì• Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: üì¶ Prepare Release Assets
      run: |
        python -c "
        import os
        import shutil
        import stat
        
        # Create release assets directory
        os.makedirs('release-assets', exist_ok=True)
        
        # Copy and rename files
        artifacts = {
            'artifacts/PressureVesselCalculator-windows/PressureVesselCalculator.exe': 'release-assets/PressureVesselCalculator-Windows.exe',
            'artifacts/PressureVesselCalculator-macos/PressureVesselCalculator': 'release-assets/PressureVesselCalculator-macOS',
            'artifacts/PressureVesselCalculator-linux/PressureVesselCalculator': 'release-assets/PressureVesselCalculator-Linux'
        }
        
        for src, dst in artifacts.items():
            if os.path.exists(src):
                shutil.copy2(src, dst)
                print(f'Copied: {src} -> {dst}')
                
                # Make executable for Unix systems
                if 'macOS' in dst or 'Linux' in dst:
                    try:
                        current_permissions = os.stat(dst).st_mode
                        os.chmod(dst, current_permissions | stat.S_IEXEC)
                        print(f'Made executable: {dst}')
                    except:
                        pass  # Skip if chmod fails
            else:
                print(f'Warning: {src} not found')
        
        # List release assets
        print('Release assets:')
        if os.path.exists('release-assets'):
            for item in os.listdir('release-assets'):
                path = os.path.join('release-assets', item)
                size = os.path.getsize(path) / (1024*1024)
                print(f'  {item} ({size:.1f} MB)')
        "

    - name: üöÄ Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: release-assets/*
        draft: false
        prerelease: false
        body: |
          ## üéâ Pressure Vessel Calculator Release
          
          **Cross-platform builds available:**
          
          ### ü™ü Windows
          - `PressureVesselCalculator-Windows.exe` - Ready to run executable
          
          ### üçé macOS
          - `PressureVesselCalculator-macOS` - Make executable with `chmod +x` and run
          
          ### üêß Linux
          - `PressureVesselCalculator-Linux` - Make executable with `chmod +x` and run
          
          **Features:**
          - AI-enhanced PDF analysis
          - Cost calculation and Excel export  
          - Email integration
          - Modern UI with dark/light themes
          
          **Requirements:**
          - No additional dependencies needed (everything bundled)
          - Internet connection for AI features
          - OpenAI API key for enhanced analysis
          
          **Installation:**
          1. Download the appropriate file for your platform
          2. Run the executable
          3. Follow the setup wizard
          
          Built automatically with GitHub Actions ‚ú®
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}